params = jsonlite::unbox(
data.frame(output = "extend",
itemids = "100100001196479",
history = 0,
sortfield = "clock",
sortorder = "DESC",
limit = 10)
),
auth = auth))
# API info
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "apiinfo.version"))
?ZabbixAPI
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "history.get",
params = jsonlite::unbox(
data.frame(output = "extend",
itemids = "100100001196479",
history = 0,
sortfield = "clock",
sortorder = "DESC",
limit = 10)
),
auth = auth)) -> zabbi2viz
head(zabbi2viz)
zabbi2viz$clock
as.Date(zabbi2viz$clock)
as.POSIXct(zabbi2viz$clock)
POSIXct(zabbi2viz$clock)
as.POSIXct(as.numeric(zabbi2viz$clock))
POSIXct(as.numeric(zabbi2viz$clock))
as.Date(as.numeric(zabbi2viz$clock))
as.numeric(zabbi2viz$clock)\
as.numeric(zabbi2viz$clock)
?as.POSIXct.numeric
as.POSIXct.numeric(as.numeric(zabbi2viz$clock, tz = "GMT"))
as.POSIXct.numeric(as.numeric(zabbi2viz$clock, tz = "GMT", origin = "1960-01-01"))
as.POSIXct.numeric(as.numeric(zabbi2viz$clock), tz = "GMT", origin = "1960-01-01")
'{
"jsonrpc": "2.0",
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "13926",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "038e1d7b1735c6a5436ee9eae095879e",
"id": 1
}' -> from
fromJSON(from)
auth
'{
"jsonrpc": "2.0",
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "adbea1bef300ac7ec1fdac807eff2717",
"id": 1
}' -> from
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = from)
as.list(from)
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(from))
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(from))[, -9]
library(magrittr)
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(from))[, -9] %>%
head
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(from))[, -9] %>%
select(value, clock, ns)
library(dplyr)
library(RZabbix)
'{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "adbea1bef300ac7ec1fdac807eff2717"
}' -> json-rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json-rpc)) -> event.info
names(event.info)
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1960-01-01")) %>%
head
library(dplyr)
library(RZabbix)
'{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "adbea1bef300ac7ec1fdac807eff2717"
}' -> json_rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc)) -> event.info
names(event.info)
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1960-01-01")) %>%
head
event.info %>%
head
library(dplyr)
library(RZabbix)
'{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "adbea1bef300ac7ec1fdac807eff2717"
}' -> json_rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc)) -> event.info
event.info %>%
head
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1960-01-01")) %>%
head
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) %>%
head
library(dplyr)
library(RZabbix)
'{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "adbea1bef300ac7ec1fdac807eff2717"
}' -> json_rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc)) -> event.info
event.info %>%
head
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) %>%
head
library(dplyr)
library(RZabbix)
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "user.login",
params = jsonlite::unbox(
data.frame(user = "mkosinski",
password = haslo)))) -> auth
paste0('{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "', auth, '"
}' -> json_rpc
library(dplyr)
library(RZabbix)
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "user.login",
params = jsonlite::unbox(
data.frame(user = "mkosinski",
password = haslo)))) -> auth
paste0('{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "', auth, '"
}') -> json_rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc)) -> event.info
event.info %>%
head
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) %>%
head
library(RZabbix)
event.info %>%
select(value, clock, ns) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) %>%
mutate(clock = round(clock)) %>%
head
seq(from = '2016-04-18 11:37:09', to = as.Date('2016-04-18 11:42:09'), by = "min")
seq(from = as.Date('2016-04-18 11:37:09'), to = as.Date('2016-04-18 11:42:09'), by = "min")
seq(from = as.POSIXct('2016-04-18 11:37:09'), to = as.POSIXct('2016-04-18 11:42:09'), by = "min")
event.info %>%
select(value, clock) %>%
mutate(clock = as.POSIXct.numeric(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) %>%
head
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc))  %>%
select(value, clock) %>%
mutate(clock = as.POSIXct(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) -> clock2viz
head(clock2viz)
head(iris, -1)
i<-1
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
tail(-1)
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min")
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
head(-1)
list2bind <- list()
for(i in 1:nrow(clock2viz)) {
data.frame(
times =
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
head(-1),
status = clock2viz$clock[i+1]) ->
list2bind[[i]]
}
clock2viz$clock[i+1]
list2bind <- list()
for(i in 1:(nrow(clock2viz)-1)) {
data.frame(
times =
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
head(-1),
status = clock2viz$clock[i+1]) ->
list2bind[[i]]
}
head(v)
head(list2bind)
list2bind <- list()
for(i in 1:(nrow(clock2viz)-1)) {
data.frame(
times =
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
head(-1),
status = clock2viz$value[i+1]) ->
list2bind[[i]]
}
list2bind
do.call(bind_rows, list2bind)
library(gghthemes)
library(ggthemes)
library(ggplot2)
library(ggthemes)
do.call(bind_rows, list2bind) %>%
ggplot(aes(x=time, y = status)) +
geom_line() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>% head
do.call(bind_rows, list2bind) %>%
ggplot(aes(x=times, y = status)) +
geom_line() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-15 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_line() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-15 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>% head
library(ggplot2)
library(ggthemes)
do.call(bind_rows, list2bind) %>% head
filter(times > '2016-04-16 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-16 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-17 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-17 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_line() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-17 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_path() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-17 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point() +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
do.call(bind_rows, list2bind) %>%
filter(times > '2016-04-17 00:00:00') %>%
ggplot(aes(x=times, y = status)) +
geom_point(size = 0.1) +
theme_igray() +
scale_fill_tableau() +
scale_colour_tableau()
library(RZabbix)
library(RZabbix)
?ZabbixAPI
library(RZabbix)
?ZabbixAPI
sessionInfo()
install.packages(c('httr', 'jsonlite'))
install.packages(c("httr", "jsonlite"))
install.packages(c("jsonlite"))
sessionInfo()
library(httr)
library(jsonlite)
sessionInfo()
library(RZabbix)
library(parallel)
?mclapply
getOption("mc.cores", 2L)
?getOption
options(mc.cores = 1L)
?getOption
getOption("mc.cores")
options(mc.cores = 2L)
getOption("mc.cores")
getOption("mc.cores", 2L)
?mclapply
# library(httr)
# install.packages('RZabbix')
library(RZabbix)
library(jsonlite)
library(dplyr)
load('haslo.rda')
############
# Autoryzacja
############
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "user.login",
params = jsonlite::unbox(
data.frame(user = "mkosinski",
password = haslo)))) -> auth
############
# request to get histoy of an item of 'item_id' number
############
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "history.get",
params = jsonlite::unbox(
data.frame(output = "extend",
itemids = "100100001196479",
history = 0,
sortfield = "clock",
sortorder = "DESC",
limit = 10)
),
auth = auth)) -> zabbi2viz
as.POSIXct.numeric(as.numeric(zabbi2viz$clock), tz = "GMT", origin = "1960-01-01")
############
# API info
############
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "apiinfo.version"))
############
# Zapytanie z JSONA
############
paste0('{
"method": "event.get",
"params": {
"output": "extend",
"select_acknowledges": "extend",
"objectids": "100100000472428",
"sortfield": ["clock", "eventid"],
"sortorder": "DESC"
},
"auth": "', auth, '"
}') -> json_rpc
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = fromJSON(json_rpc))  %>%
select(value, clock) %>%
mutate(clock = as.POSIXct(as.numeric(clock),
tz = "GMT",
origin = "1970-01-01")) -> clock2viz
############
# zwizualizajmy
############
list2bind <- list()
for(i in 1:(nrow(clock2viz)-1)) {
data.frame(
times =
seq(from = clock2viz$clock[i+1],
to = clock2viz$clock[i],
by = "min") %>%
head(-1),
status = clock2viz$value[i+1],
stringsAsFactors = FALSE) ->
list2bind[[i]]
}
library(ggplot2)
do.call(bind_rows, list2bind) %>%
filter(as.Date(times) > "2016-04-22") %>%
ggplot(aes(x=times, y = status)) +
geom_point(size = 0.1)
library(RZabbix)
library(jsonlite)
library(dplyr)
load('haslo.rda')
############
# Autoryzacja
############
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "user.login",
params = jsonlite::unbox(
data.frame(user = "mkosinski",
password = haslo)))) -> auth
auth
haslo
haslo <- "Sobieskiego333!"
ZabbixAPI("https://zabbix.int.wp-sa.pl",
body = list(method = "user.login",
params = jsonlite::unbox(
data.frame(user = "mkosinski",
password = haslo)))) -> auth
auth
library(RTCGA)
?boxplotTCGA
?pcaTCGA
library(dplyr)
## RNASeq expressions
library(RTCGA.rnaseq)
expressionsTCGA(BRCA.rnaseq, OV.rnaseq, HNSC.rnaseq) %>%
rename(cohort = dataset) %>%
filter(substr(bcr_patient_barcode, 14, 15) == "01") -> BRCA.OV.HNSC.rnaseq.cancer
pcaTCGA(BRCA.OV.HNSC.rnaseq.cancer, "cohort")
